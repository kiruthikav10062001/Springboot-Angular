package org.virtusa.spring.service.impl;

import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.virtusa.spring.entity.Institute;
import org.virtusa.spring.repository.InstituteRespository;
import org.virtusa.spring.exception.InstituteNotFoundException;
import org.virtusa.spring.service.InstituteService;

@Service
public class InstitueServiceImpl implements InstituteService{
	@Autowired
	private InstituteRespository instituteRepository;

	@Override
	public void addInstitute(Institute institute) {
		instituteRepository.save(institute);
		
	}

	@Override
	public void updateInstitute(Long instituteId, Institute institute) {
		Institute institute1=instituteRepository.findById(instituteId).orElseThrow(()->new InstituteNotFoundException("Institute with given Id not Found!!"));
		institute1.setInstituteName(institute.getInstituteName());
		institute1.setInstituteDescription(institute.getInstituteDescription());
		institute1.setInstituteEmail(institute.getInstituteEmail());
		institute1.setState(institute.getState());
		institute1.setCity(institute.getCity());
		institute1.setAddress(institute.getAddress());
		institute1.setContact(institute.getContact());
		institute1.setImageUrl(institute.getImageUrl());
		
		instituteRepository.save(institute1);
	}

	@Override
	public List<Institute> getInstitutes() {
		return instituteRepository.findAll();
	}

	@Override
	public Institute getInstitute(Long instituteId) {
		return instituteRepository.findById(instituteId).orElseThrow(()->new InstituteNotFoundException("Institute not found"));
	}

	@Override
	public void deleteInstitute(Long instituteId) {
		instituteRepository.deleteById(instituteId);
		
	}
	
	public Institute getInstituteByInstituteName(String instituteName) {
		return instituteRepository.findByinstituteName(instituteName).orElseThrow(()->new InstituteNameNotFOundException("Institute with given name not found"));
	}
	
	public Institute getInstituteByStateOrCity(String state,String city) {
		return instituteRepository.findByStateOrCity(state, city).orElse(null);
	}
	
	
	public Institute getInstituteByStateAndCity(String state,String city) {
		return instituteRepository.findByStateAndCity(state, city).orElse(null);
	}

	
	
	
}
